#Requires -RunAsAdministrator
function Get-DNSAutoList{
<#
    .SYNOPSIS
    Creates list of AD Joined Windows DNS Servers

    .DESCRIPTION
    Run to automatically query Active Directory for all Windows Servers, then parses Servers with DNS active. Part of setup action for applying fix to CVE-2020-1350

    .EXAMPLE
    Get-DNSAutoList
#>
    $DNSServers = @()
    $servers = Get-ADComputer -Filter 'operatingsystem -like "*server*" -and enabled -eq "true"' `
-Properties Name,Operatingsystem,OperatingSystemVersion,IPv4Address |
Sort-Object -Property Operatingsystem |
Select-Object -Property Name,Operatingsystem,OperatingSystemVersion,IPv4Address

foreach($server in $servers){
    $Name = $server.name
    $IP = $server.IPv4Address
    write-output "Processing Server: $Name - $IP"
    try{
        $DNSTest = Test-DnsServer -Computername $Name -IPAddress 8.8.8.8
        }catch{
        #ignore errors
        }
    $DNSResult = $DNSTest.Resultnsl
    if($DNSResult -eq "Success"){
        write-output "$Name is a DNS Server"
        $DNSServers += "$Name`r"
        }else{
        write-output "Not a DNS Server - skipping"
        }
    $DNSResult = $null
    $DNSTest = $null
    }
}

function Get-DNSManualList{
<#
    .SYNOPSIS
    Prompts for Manual list of Windows DNS Servers by Name

    .DESCRIPTION
    Run to list out all Windows DNS Servers in your environment. Part of setup action for applying fix to CVE-2020-1350

    .EXAMPLE
    Get-DNSManualList
#>
    $DNSServers = @()
while($Server -ne "q"){
    $Server = read-host -prompt "Enter Server Name for Registry Fix - Enter q to Finish"
    if($Server -eq $null -OR $Server -eq ""){
        write-output "No Servers Added - ending script"
        pause
        exit
        }
     elseif($Server -ne "q")
        {
            $DNSServers += $Server
        }
    
    }
    write-output "DNS Servers Listed:"
    write-output $DNSServers
}

function Set-DNSFix{
<#
    .SYNOPSIS
    Connects and creates registry entry to address CVE-2020-1350 on Windows DNS Servers

    .DESCRIPTION
    Connects to DNS Servers, creates registry entry, then restarts DNS Service.

    .EXAMPLE
    Set-DNSFix
#>
$credential = Get-Credential -Message "Enter Administrator Credentials to connect to servers"

foreach($DNSServer in $DNSServers){
    $DNSFix = New-PSSession -ComputerName $DNSServer -Credential $credential
        Invoke-Command -Session $DNSFix -Scriptblock {
            $registryPath = "HKLM:\System\CurrentControlSet\Services\DNS\Parameters"
            $Name = "TcpReceivePacketSize"
            $value = "0x0000FF00"
            New-ItemProperty -Path $registryPath -Name $name -Value $value -PropertyType DWORD -Force | Out-Null
            Restart-Service -Name DNS
            Get-ItemProperty $registryPath -name $name
        }
    #Remove-PSSession $DNSFix.ID
    }
    #Get-Variable -Exclude PWD,*Preference | Remove-Variable -EA 0
}